/**
 * @jest-environment node
 */
import axios from"axios";import propertiesReader from"properties-reader";import{valueOnFields,mockEstimationFor,getImpactDataStructure}from"../test-utils.js";let api;const formats=[["json","application/json"],["xml","application/xml"]],periodTypes=[["days"],["weeks"],["months"]];describe("on-covid-19 >> Challenge-5",()=>{beforeAll(async()=>{const t=propertiesReader("./app.properties");api=t.get("backend.rest")}),test("app.properties file has backend REST API URL",async()=>{expect(api).toBeTruthy(),expect(api).not.toBe("https://jsonplaceholder.typicode.com/todos")}),test.each(periodTypes)("REST API estimates correctly, in %s",async t=>{const e=await mockEstimationFor(t),{data:a,estimate:o}=e.data,s=await axios.post(api,a),{data:p,impact:r,severeImpact:i}=s.data;expect(p).toBeTruthy(),expect(r).toBeTruthy(),expect(i).toBeTruthy();const c={data:p,impact:r,severeImpact:i};expect(c).toMatchObject(getImpactDataStructure()),valueOnFields(c,o).forEach(([t,e])=>{expect(t).toBe(e)})}),test.each(formats)("API handles request for %s format",async(t,e)=>{const a=await mockEstimationFor("weeks"),{data:o}=a.data,{headers:s}=await axios.post(`${api}/${t}`,o),p=s["content-type"].indexOf(e);expect(p).toBeGreaterThanOrEqual(0)}),test("API provides logs at /logs",async()=>{expect(void 0).toEqual("string"),console.log("THIS TEST IS FAILING BECAUSE IT HAS NOT BEEN IMPLEMENTED YET!")})});