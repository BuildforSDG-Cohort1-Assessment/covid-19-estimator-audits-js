/**
 * @jest-environment node
 */
import puppeteer from"puppeteer";import propertiesReader from"properties-reader";let page,browser,frontendURL;const cases=[["button","data-go-estimate"],["population","data-population"],["periodType","data-period-type"],["timeToElapse","data-time-to-elapse"],["reportedCases","data-reported-cases"],["totalHospitalBeds","data-total-hospital-beds"]];describe("on-covid-19 >> Challenge-4",()=>{beforeAll(async()=>{const e=propertiesReader("./app.properties");frontendURL=e.get("frontend.url"),browser=await puppeteer.launch(),page=await browser.newPage()}),afterAll(async()=>{await browser.close()}),test.each(cases)("UI has %s input with a %s attribute",async(e,t)=>{await page.goto(frontendURL,{waitUntil:"domcontentloaded"});let a=`input[${t}]`;"data-go-estimate"!==t&&"data-period-type"!==t||(a=`[${t}]`);const o=await page.$(a);if(expect(o).toBeTruthy(),"periodType"===e){a=`${a} option`;const e=e=>e.map(e=>(e.value||"").toLowerCase()),t=await page.$$eval(a,e);expect(t).toHaveLength(3),expect(t).toEqual(["days","weeks","months"])}},15e3)});